var VSHADER_SOURCE="attribute vec4 a_Position;\nattribute vec4 a_Color;\nuniform mat4 u_ViewProjMatrix;\nvarying vec4 v_Color;\nvoid main() {\n  gl_Position = u_ViewProjMatrix * a_Position;\n  v_Color = a_Color;\n}\n";var FSHADER_SOURCE="#ifdef GL_ES\nprecision mediump float;\n#endif\nvarying vec4 v_Color;\nvoid main() {\n  gl_FragColor = v_Color;\n}\n";function main(){var a=document.getElementById("webgl");var c=getWebGLContext(a);if(!c){console.log("Failed to get the rendering context for WebGL");return}if(!initShaders(c,VSHADER_SOURCE,FSHADER_SOURCE)){console.log("Failed to intialize shaders.");return}var e=initVertexBuffers(c);if(e<0){console.log("Failed to set the vertex information");return}c.clearColor(0,0,0,1);c.enable(c.DEPTH_TEST);var d=c.getUniformLocation(c.program,"u_ViewProjMatrix");if(!d){console.log("Failed to get the storage locations of u_ViewProjMatrix");return}var b=new Matrix4();b.setPerspective(30,a.width/a.height,1,100);b.lookAt(3.06,2.5,10,0,0,-2,0,1,0);c.uniformMatrix4fv(d,false,b.elements);c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT);c.enable(c.POLYGON_OFFSET_FILL);c.drawArrays(c.TRIANGLES,0,e/2);c.polygonOffset(1,1);c.drawArrays(c.TRIANGLES,e/2,e/2)}function initVertexBuffers(f){var b=new Float32Array([0,2.5,-5,0.4,1,0.4,-2.5,-2.5,-5,0.4,1,0.4,2.5,-2.5,-5,1,0.4,0.4,0,3,-5,1,0.4,0.4,-3,-3,-5,1,1,0.4,3,-3,-5,1,1,0.4]);var g=6;var e=f.createBuffer();if(!e){console.log("Failed to create the buffer object");return -1}f.bindBuffer(f.ARRAY_BUFFER,e);f.bufferData(f.ARRAY_BUFFER,b,f.STATIC_DRAW);var a=b.BYTES_PER_ELEMENT;var d=f.getAttribLocation(f.program,"a_Position");if(d<0){console.log("Failed to get the storage location of a_Position");return -1}f.vertexAttribPointer(d,3,f.FLOAT,false,a*6,0);f.enableVertexAttribArray(d);var c=f.getAttribLocation(f.program,"a_Color");if(c<0){console.log("Failed to get the storage location of a_Color");return -1}f.vertexAttribPointer(c,3,f.FLOAT,false,a*6,a*3);f.enableVertexAttribArray(c);return g};
var VSHADER_SOURCE="attribute vec4 a_Position;\nattribute vec4 a_Color;\nuniform mat4 u_MvpMatrix;\nvarying vec4 v_Color;\nvoid main() {\n  gl_Position = u_MvpMatrix * a_Position;\n  v_Color = a_Color;\n}\n";var FSHADER_SOURCE="#ifdef GL_ES\nprecision mediump float;\n#endif\nvarying vec4 v_Color;\nvoid main() {\n  gl_FragColor = v_Color;\n}\n";function main(){var b=document.getElementById("webgl");var g=getWebGLContext(b);if(!g){console.log("Failed to get the rendering context for WebGL");return}if(!initShaders(g,VSHADER_SOURCE,FSHADER_SOURCE)){console.log("Failed to intialize shaders.");return}var h=initVertexBuffers(g);if(h<0){console.log("Failed to set the vertex information");return}g.clearColor(0,0,0,1);var d=g.getUniformLocation(g.program,"u_MvpMatrix");if(!d){console.log("Failed to get the storage location of u_MvpMatrix");return}var c=new Matrix4();var e=new Matrix4();var f=new Matrix4();var a=new Matrix4();c.setTranslate(0.75,0,0);e.setLookAt(0,0,5,0,0,-100,0,1,0);f.setPerspective(30,b.width/b.height,1,100);a.set(f).multiply(e).multiply(c);g.uniformMatrix4fv(d,false,a.elements);g.clear(g.COLOR_BUFFER_BIT);g.drawArrays(g.TRIANGLES,0,h);c.setTranslate(-0.75,0,0);a.set(f).multiply(e).multiply(c);g.uniformMatrix4fv(d,false,a.elements);g.drawArrays(g.TRIANGLES,0,h)}function initVertexBuffers(f){var b=new Float32Array([0,1,-4,0.4,1,0.4,-0.5,-1,-4,0.4,1,0.4,0.5,-1,-4,1,0.4,0.4,0,1,-2,1,1,0.4,-0.5,-1,-2,1,1,0.4,0.5,-1,-2,1,0.4,0.4,0,1,0,0.4,0.4,1,-0.5,-1,0,0.4,0.4,1,0.5,-1,0,1,0.4,0.4]);var g=9;var e=f.createBuffer();if(!e){console.log("Failed to create the buffer object");return -1}f.bindBuffer(f.ARRAY_BUFFER,e);f.bufferData(f.ARRAY_BUFFER,b,f.STATIC_DRAW);var a=b.BYTES_PER_ELEMENT;var d=f.getAttribLocation(f.program,"a_Position");if(d<0){console.log("Failed to get the storage location of a_Position");return -1}f.vertexAttribPointer(d,3,f.FLOAT,false,a*6,0);f.enableVertexAttribArray(d);var c=f.getAttribLocation(f.program,"a_Color");if(c<0){console.log("Failed to get the storage location of a_Color");return -1}f.vertexAttribPointer(c,3,f.FLOAT,false,a*6,a*3);f.enableVertexAttribArray(c);return g};
var VSHADER_SOURCE="attribute vec4 a_Position;\nattribute vec4 a_Color;\nuniform mat4 u_ModelViewMatrix;\nvarying vec4 v_Color;\nvoid main() {\n  gl_Position = u_ModelViewMatrix * a_Position;\n  v_Color = a_Color;\n}\n";var FSHADER_SOURCE="#ifdef GL_ES\nprecision mediump float;\n#endif\nvarying vec4 v_Color;\nvoid main() {\n  gl_FragColor = v_Color;\n}\n";function main(){var b=document.getElementById("webgl");var f=getWebGLContext(b);if(!f){console.log("Failed to get the rendering context for WebGL");return}if(!initShaders(f,VSHADER_SOURCE,FSHADER_SOURCE)){console.log("Failed to intialize shaders.");return}var g=initVertexBuffers(f);if(g<0){console.log("Failed to set the vertex information");return}f.clearColor(0,0,0,1);var e=f.getUniformLocation(f.program,"u_ModelViewMatrix");if(!e){console.log("u_ModelViewMatrixの格納場所の取得に失敗");return}var d=new Matrix4();d.setLookAt(0.2,0.25,0.25,0,0,0,0,1,0);var c=new Matrix4();c.setRotate(-10,0,0,1);var a=d.multiply(c);f.uniformMatrix4fv(e,false,a.elements);f.clear(f.COLOR_BUFFER_BIT);f.drawArrays(f.TRIANGLES,0,g)}function initVertexBuffers(f){var b=new Float32Array([0,0.5,-0.4,0.4,1,0.4,-0.5,-0.5,-0.4,0.4,1,0.4,0.5,-0.5,-0.4,1,0.4,0.4,0.5,0.4,-0.2,1,0.4,0.4,-0.5,0.4,-0.2,1,1,0.4,0,-0.6,-0.2,1,1,0.4,0,0.5,0,0.4,0.4,1.4,-0.5,-0.5,0,0.4,0.4,1,0.5,-0.5,0,1,0.4,0.4]);var g=9;var e=f.createBuffer();if(!e){console.log("Failed to create the buffer object");return -1}f.bindBuffer(f.ARRAY_BUFFER,e);f.bufferData(f.ARRAY_BUFFER,b,f.STATIC_DRAW);var a=b.BYTES_PER_ELEMENT;var d=f.getAttribLocation(f.program,"a_Position");if(d<0){console.log("Failed to get the storage location of a_Position");return -1}f.vertexAttribPointer(d,3,f.FLOAT,false,a*6,0);f.enableVertexAttribArray(d);var c=f.getAttribLocation(f.program,"a_Color");if(c<0){console.log("Failed to get the storage location of a_Color");return -1}f.vertexAttribPointer(c,3,f.FLOAT,false,a*6,a*3);f.enableVertexAttribArray(c);f.bindBuffer(f.ARRAY_BUFFER,null);return g};
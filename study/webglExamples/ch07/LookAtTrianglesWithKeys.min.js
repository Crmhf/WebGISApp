var VSHADER_SOURCE="attribute vec4 a_Position;\nattribute vec4 a_Color;\nuniform mat4 u_ViewMatrix;\nvarying vec4 v_Color;\nvoid main() {\n  gl_Position = u_ViewMatrix * a_Position;\n  v_Color = a_Color;\n}\n";var FSHADER_SOURCE="#ifdef GL_ES\nprecision mediump float;\n#endif\nvarying vec4 v_Color;\nvoid main() {\n  gl_FragColor = v_Color;\n}\n";function main(){var a=document.getElementById("webgl");var d=getWebGLContext(a);if(!d){console.log("Failed to get the rendering context for WebGL");return}if(!initShaders(d,VSHADER_SOURCE,FSHADER_SOURCE)){console.log("Failed to intialize shaders.");return}var e=initVertexBuffers(d);if(e<0){console.log("Failed to set the vertex information");return}d.clearColor(0,0,0,1);var c=d.getUniformLocation(d.program,"u_ViewMatrix");if(!c){console.log("Failed to get the storage locations of u_ViewMatrix");return}var b=new Matrix4();document.onkeydown=function(f){keydown(f,d,e,c,b)};draw(d,e,c,b)}function initVertexBuffers(f){var b=new Float32Array([0,0.5,-0.4,0.4,1,0.4,-0.5,-0.5,-0.4,0.4,1,0.4,0.5,-0.5,-0.4,1,0.4,0.4,0.5,0.4,-0.2,1,0.4,0.4,-0.5,0.4,-0.2,1,1,0.4,0,-0.6,-0.2,1,1,0.4,0,0.5,0,0.4,0.4,1,-0.5,-0.5,0,0.4,0.4,1,0.5,-0.5,0,1,0.4,0.4]);var g=9;var e=f.createBuffer();if(!e){console.log("Failed to create the buffer object");return -1}f.bindBuffer(f.ARRAY_BUFFER,e);f.bufferData(f.ARRAY_BUFFER,b,f.STATIC_DRAW);var a=b.BYTES_PER_ELEMENT;var d=f.getAttribLocation(f.program,"a_Position");if(d<0){console.log("Failed to get the storage location of a_Position");return -1}f.vertexAttribPointer(d,3,f.FLOAT,false,a*6,0);f.enableVertexAttribArray(d);var c=f.getAttribLocation(f.program,"a_Color");if(c<0){console.log("Failed to get the storage location of a_Color");return -1}f.vertexAttribPointer(c,3,f.FLOAT,false,a*6,a*3);f.enableVertexAttribArray(c);return g}var g_eyeX=0.2,g_eyeY=0.25,g_eyeZ=0.25;function keydown(c,d,e,b,a){if(c.keyCode==39){g_eyeX+=0.01}else{if(c.keyCode==37){g_eyeX-=0.01}else{return}}draw(d,e,b,a)}function draw(c,d,b,a){a.setLookAt(g_eyeX,g_eyeY,g_eyeZ,0,0,0,0,1,0);c.uniformMatrix4fv(b,false,a.elements);c.clear(c.COLOR_BUFFER_BIT);c.drawArrays(c.TRIANGLES,0,d)};
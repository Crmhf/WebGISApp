var VSHADER_SOURCE="attribute vec4 a_Position;\nattribute vec4 a_Color;\nuniform mat4 u_MvpMatrix;\nvarying vec4 v_Color;\nvoid main() {\n  gl_Position = u_MvpMatrix * a_Position;\n  v_Color = a_Color;\n}\n";var FSHADER_SOURCE="#ifdef GL_ES\nprecision mediump float;\n#endif\nvarying vec4 v_Color;\nvoid main() {\n  gl_FragColor = v_Color;\n}\n";function main(){var b=document.getElementById("webgl");var d=getWebGLContext(b);if(!d){console.log("Failed to get the rendering context for WebGL");return}initShaders(d,VSHADER_SOURCE,FSHADER_SOURCE);var e=initVertexBuffers(d);if(e<0){console.log("Failed to initialize buffer objects");return}d.clearColor(0,0,0,1);d.enable(d.DEPTH_TEST);var c=d.getUniformLocation(d.program,"u_MvpMatrix");if(!c){console.log("Failed to get the storage location of u_MvpMatrix");return}var a=new Matrix4();a.setPerspective(30,1,1,100);a.lookAt(3,3,7,0,0,0,0,1,0);d.uniformMatrix4fv(c,false,a.elements);d.clear(d.COLOR_BUFFER_BIT|d.DEPTH_BUFFER_BIT);d.drawElements(d.TRIANGLES,e,d.UNSIGNED_BYTE,0)}function initVertexBuffers(h){var c=new Float32Array([1,1,1,0,0,0,-1,1,1,0,0,0,-1,-1,1,0,0,0,1,-1,1,0,0,0,1,-1,-1,0,0,0,1,1,-1,0,0,0,-1,1,-1,0,0,0,-1,-1,-1,0,0,0]);var g=new Uint8Array([0,1,2,0,2,3,0,3,4,0,4,5,0,5,6,0,6,1,1,6,7,1,7,2,7,4,3,7,3,2,4,7,6,4,6,5]);var f=h.createBuffer();var b=h.createBuffer();if(!f||!b){return -1}h.bindBuffer(h.ARRAY_BUFFER,f);h.bufferData(h.ARRAY_BUFFER,c,h.STATIC_DRAW);var a=c.BYTES_PER_ELEMENT;var e=h.getAttribLocation(h.program,"a_Position");if(e<0){console.log("Failed to get the storage location of a_Position");return -1}h.vertexAttribPointer(e,3,h.FLOAT,false,a*6,0);h.enableVertexAttribArray(e);var d=h.getAttribLocation(h.program,"a_Color");if(d<0){console.log("Failed to get the storage location of a_Color");return -1}h.vertexAttribPointer(d,3,h.FLOAT,false,a*6,a*3);h.enableVertexAttribArray(d);h.bindBuffer(h.ARRAY_BUFFER,null);h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,b);h.bufferData(h.ELEMENT_ARRAY_BUFFER,g,h.STATIC_DRAW);return g.length};
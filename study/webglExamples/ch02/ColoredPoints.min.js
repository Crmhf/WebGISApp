var VSHADER_SOURCE="attribute vec4 a_Position;\nvoid main() {\n  gl_Position = a_Position;\n  gl_PointSize = 10.0;\n}\n";var FSHADER_SOURCE="precision mediump float;\nuniform vec4 u_FragColor;\nvoid main() {\n  gl_FragColor = u_FragColor;\n}\n";function main(){var a=document.getElementById("webgl");var d=getWebGLContext(a);if(!d){console.log("Failed to get the rendering context for WebGL");return}if(!initShaders(d,VSHADER_SOURCE,FSHADER_SOURCE)){console.log("Failed to intialize shaders.");return}var b=d.getAttribLocation(d.program,"a_Position");if(b<0){console.log("Failed to get the storage location of a_Position");return}var c=d.getUniformLocation(d.program,"u_FragColor");if(!c){console.log("Failed to get the storage location of u_FragColor");return}a.onmousedown=function(e){click(e,d,a,b,c)};d.clearColor(0,0,0,1);d.clear(d.COLOR_BUFFER_BIT)}var g_points=[];var g_colors=[];function click(j,e,b,a,g){var l=j.clientX;var h=j.clientY;var k=j.target.getBoundingClientRect();l=((l-k.left)-b.width/2)/(b.width/2);h=(b.height/2-(h-k.top))/(b.height/2);g_points.push([l,h]);if(l>=0&&h>=0){g_colors.push([1,0,0,1])}else{if(l<0&&h<0){g_colors.push([0,1,0,1])}else{g_colors.push([1,1,1,1])}}e.clear(e.COLOR_BUFFER_BIT);var f=g_points.length;for(var d=0;d<f;d++){var m=g_points[d];var c=g_colors[d];e.vertexAttrib3f(a,m[0],m[1],0);e.uniform4f(g,c[0],c[1],c[2],c[3]);e.drawArrays(e.POINTS,0,1)}};
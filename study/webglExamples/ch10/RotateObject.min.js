var VSHADER_SOURCE="attribute vec4 a_Position;\nattribute vec2 a_TexCoord;\nuniform mat4 u_MvpMatrix;\nvarying vec2 v_TexCoord;\nvoid main() {\n  gl_Position = u_MvpMatrix * a_Position;\n  v_TexCoord = a_TexCoord;\n}\n";var FSHADER_SOURCE="#ifdef GL_ES\nprecision mediump float;\n#endif\nuniform sampler2D u_Sampler;\nvarying vec2 v_TexCoord;\nvoid main() {\n  gl_FragColor = texture2D(u_Sampler, v_TexCoord);\n}\n";function main(){var a=document.getElementById("webgl");var f=getWebGLContext(a);if(!f){console.log("Failed to get the rendering context for WebGL");return}if(!initShaders(f,VSHADER_SOURCE,FSHADER_SOURCE)){console.log("Failed to intialize shaders.");return}var g=initVertexBuffers(f);if(g<0){console.log("Failed to set the vertex information");return}f.clearColor(0,0,0,1);f.enable(f.DEPTH_TEST);var d=f.getUniformLocation(f.program,"u_MvpMatrix");if(!d){console.log("Failed to get the storage location of uniform variable");return}var c=new Matrix4();c.setPerspective(30,a.width/a.height,1,100);c.lookAt(3,3,7,0,0,0,0,1,0);var e=[0,0];initEventHandlers(a,e);if(!initTextures(f)){console.log("Failed to intialize the texture.");return}var b=function(){draw(f,g,c,d,e);requestAnimationFrame(b,a)};b()}function initVertexBuffers(e){var b=new Float32Array([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,1,-1,-1,1,-1,-1,1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1]);var c=new Float32Array([1,1,0,1,0,0,1,0,0,1,0,0,1,0,1,1,1,0,1,1,0,1,0,0,1,1,0,1,0,0,1,0,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1]);var d=new Uint8Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]);var a=e.createBuffer();if(!a){return -1}if(!initArrayBuffer(e,b,3,e.FLOAT,"a_Position")){return -1}if(!initArrayBuffer(e,c,2,e.FLOAT,"a_TexCoord")){return -1}e.bindBuffer(e.ARRAY_BUFFER,null);e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,a);e.bufferData(e.ELEMENT_ARRAY_BUFFER,d,e.STATIC_DRAW);return d.length}function initEventHandlers(a,e){var d=false;var c=-1,b=-1;a.onmousedown=function(h){var f=h.clientX,i=h.clientY;var g=h.target.getBoundingClientRect();if(g.left<=f&&f<g.right&&g.top<=i&&i<g.bottom){c=f;b=i;d=true}};a.onmouseup=function(f){d=false};a.onmousemove=function(j){var f=j.clientX,k=j.clientY;if(d){var i=100/a.height;var h=i*(f-c);var g=i*(k-b);e[0]=Math.max(Math.min(e[0]+g,90),-90);e[1]=e[1]+h}c=f,b=k}}var g_MvpMatrix=new Matrix4();function draw(d,e,b,a,c){g_MvpMatrix.set(b);g_MvpMatrix.rotate(c[0],1,0,0);g_MvpMatrix.rotate(c[1],0,1,0);d.uniformMatrix4fv(a,false,g_MvpMatrix.elements);d.clear(d.COLOR_BUFFER_BIT|d.DEPTH_BUFFER_BIT);d.drawElements(d.TRIANGLES,e,d.UNSIGNED_BYTE,0)}function initArrayBuffer(f,e,b,c,d){var a=f.createBuffer();if(!a){console.log("Failed to create the buffer object");return false}f.bindBuffer(f.ARRAY_BUFFER,a);f.bufferData(f.ARRAY_BUFFER,e,f.STATIC_DRAW);var g=f.getAttribLocation(f.program,d);if(g<0){console.log("Failed to get the storage location of "+d);return false}f.vertexAttribPointer(g,b,c,false,0,0);f.enableVertexAttribArray(g);return true}function initTextures(d){var a=d.createTexture();if(!a){console.log("Failed to create the texture object");return false}var c=d.getUniformLocation(d.program,"u_Sampler");if(!c){console.log("Failed to get the storage location of u_Sampler");return false}var b=new Image();if(!b){console.log("Failed to create the image object");return false}b.onload=function(){loadTexture(d,a,c,b)};b.src="../resources/sky.jpg";return true}function loadTexture(d,a,c,b){d.pixelStorei(d.UNPACK_FLIP_Y_WEBGL,1);d.activeTexture(d.TEXTURE0);d.bindTexture(d.TEXTURE_2D,a);d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.LINEAR);d.texImage2D(d.TEXTURE_2D,0,d.RGB,d.RGB,d.UNSIGNED_BYTE,b);d.uniform1i(c,0)};
var VSHADER_SOURCE="attribute vec4 a_Position;\nattribute vec4 a_Color;\nattribute vec4 a_Normal;\nuniform mat4 u_MvpMatrix;\nuniform mat4 u_NormalMatrix;\nuniform vec3 u_LightColor;\nuniform vec3 u_LightDirection;\nuniform vec3 u_AmbientLight;\nvarying vec4 v_Color;\nvoid main() {\n  gl_Position = u_MvpMatrix * a_Position;\n  vec3 normal = normalize(vec3(u_NormalMatrix * a_Normal));\n  float nDotL = max(dot(u_LightDirection, normal), 0.0);\n  vec3 diffuse = u_LightColor * a_Color.rgb * nDotL;\n  vec3 ambient = u_AmbientLight * a_Color.rgb;\n  v_Color = vec4(diffuse + ambient, a_Color.a);\n}\n";var FSHADER_SOURCE="#ifdef GL_ES\nprecision mediump float;\n#endif\nvarying vec4 v_Color;\nvoid main() {\n  gl_FragColor = v_Color;\n}\n";function main(){var c=document.getElementById("webgl");var g=getWebGLContext(c);if(!g){console.log("Failed to get the rendering context for WebGL");return}if(!initShaders(g,VSHADER_SOURCE,FSHADER_SOURCE)){console.log("Failed to intialize shaders.");return}var d=initVertexBuffers(g);if(d<0){console.log("Failed to set the vertex information");return}g.clearColor(0,0,0,1);g.enable(g.DEPTH_TEST);var b=g.getUniformLocation(g.program,"u_MvpMatrix");var h=g.getUniformLocation(g.program,"u_NormalMatrix");var a=g.getUniformLocation(g.program,"u_LightColor");var j=g.getUniformLocation(g.program,"u_LightDirection");var f=g.getUniformLocation(g.program,"u_AmbientLight");if(!b||!h||!a||!j||!f){console.log("Failed to get the storage location");return}g.uniform3f(a,1,1,1);var l=new Vector3([0,3,4]);l.normalize();g.uniform3fv(j,l.elements);g.uniform3f(f,0.2,0.2,0.2);var k=new Matrix4();var i=new Matrix4();var e=new Matrix4();k.setTranslate(0,0.9,0);k.rotate(90,0,0,1);i.setPerspective(30,c.width/c.height,1,100);i.lookAt(3,3,7,0,0,0,0,1,0);i.multiply(k);g.uniformMatrix4fv(b,false,i.elements);e.setInverseOf(k);e.transpose();g.uniformMatrix4fv(h,false,e.elements);g.clear(g.COLOR_BUFFER_BIT|g.DEPTH_BUFFER_BIT);g.drawElements(g.TRIANGLES,d,g.UNSIGNED_BYTE,0)}function initVertexBuffers(f){var c=new Float32Array([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,1,-1,-1,1,-1,-1,1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1]);var b=new Float32Array([1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0]);var d=new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,1,0,0,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1]);var e=new Uint8Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]);if(!initArrayBuffer(f,"a_Position",c,3)){return -1}if(!initArrayBuffer(f,"a_Color",b,3)){return -1}if(!initArrayBuffer(f,"a_Normal",d,3)){return -1}f.bindBuffer(f.ARRAY_BUFFER,null);var a=f.createBuffer();if(!a){console.log("Failed to create the buffer object");return false}f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,a);f.bufferData(f.ELEMENT_ARRAY_BUFFER,e,f.STATIC_DRAW);return e.length}function initArrayBuffer(e,c,d,b){var a=e.createBuffer();if(!a){console.log("Failed to create the buffer object");return false}e.bindBuffer(e.ARRAY_BUFFER,a);e.bufferData(e.ARRAY_BUFFER,d,e.STATIC_DRAW);var f=e.getAttribLocation(e.program,c);if(f<0){console.log("Failed to get the storage location of "+c);return false}e.vertexAttribPointer(f,b,e.FLOAT,false,0,0);e.enableVertexAttribArray(f);return true};
var VSHADER_SOURCE="attribute vec4 a_Position;\nattribute vec4 a_Color;\nattribute vec4 a_Normal;\nuniform mat4 u_MvpMatrix;\nuniform vec3 u_DiffuseLight;\nuniform vec3 u_LightDirection;\nuniform vec3 u_AmbientLight;\nvarying vec4 v_Color;\nvoid main() {\n  gl_Position = u_MvpMatrix * a_Position;\n  vec3 normal = normalize(a_Normal.xyz);\n  float nDotL = max(dot(u_LightDirection, normal), 0.0);\n  vec3 diffuse = u_DiffuseLight * a_Color.rgb * nDotL;\n  vec3 ambient = u_AmbientLight * a_Color.rgb;\n  v_Color = vec4(diffuse + ambient, a_Color.a);\n}\n";var FSHADER_SOURCE="#ifdef GL_ES\nprecision mediump float;\n#endif\nvarying vec4 v_Color;\nvoid main() {\n  gl_FragColor = v_Color;\n}\n";function main(){var b=document.getElementById("webgl");var e=getWebGLContext(b);if(!e){console.log("Failed to get the rendering context for WebGL");return}if(!initShaders(e,VSHADER_SOURCE,FSHADER_SOURCE)){console.log("Failed to intialize shaders.");return}var c=initVertexBuffers(e);if(c<0){console.log("Failed to set the vertex information");return}e.clearColor(0,0,0,1);e.enable(e.DEPTH_TEST);var a=e.getUniformLocation(e.program,"u_MvpMatrix");var g=e.getUniformLocation(e.program,"u_DiffuseLight");var h=e.getUniformLocation(e.program,"u_LightDirection");var d=e.getUniformLocation(e.program,"u_AmbientLight");if(!a||!g||!h||!d){console.log("Failed to get the storage location");return}e.uniform3f(g,1,1,1);var i=new Vector3([0.5,3,4]);i.normalize();e.uniform3fv(h,i.elements);e.uniform3f(d,0.2,0.2,0.2);var f=new Matrix4();f.setPerspective(30,b.width/b.height,1,100);f.lookAt(3,3,7,0,0,0,0,1,0);e.uniformMatrix4fv(a,false,f.elements);e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT);e.drawElements(e.TRIANGLES,c,e.UNSIGNED_BYTE,0)}function initVertexBuffers(f){var c=new Float32Array([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,1,-1,-1,1,-1,-1,1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1]);var b=new Float32Array([1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0]);var d=new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,1,0,0,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1]);var e=new Uint8Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]);if(!initArrayBuffer(f,"a_Position",c,3)){return -1}if(!initArrayBuffer(f,"a_Color",b,3)){return -1}if(!initArrayBuffer(f,"a_Normal",d,3)){return -1}f.bindBuffer(f.ARRAY_BUFFER,null);var a=f.createBuffer();if(!a){console.log("Failed to create the buffer object");return false}f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,a);f.bufferData(f.ELEMENT_ARRAY_BUFFER,e,f.STATIC_DRAW);return e.length}function initArrayBuffer(e,c,d,b){var a=e.createBuffer();if(!a){console.log("Failed to create the buffer object");return false}e.bindBuffer(e.ARRAY_BUFFER,a);e.bufferData(e.ARRAY_BUFFER,d,e.STATIC_DRAW);var f=e.getAttribLocation(e.program,c);if(f<0){console.log("Failed to get the storage location of "+c);return false}e.vertexAttribPointer(f,b,e.FLOAT,false,0,0);e.enableVertexAttribArray(f);return true};
var VSHADER_SOURCE="attribute vec4 a_Position;\nattribute vec4 a_Normal;\nuniform mat4 u_MvpMatrix;\nuniform mat4 u_ModelMatrix;\nuniform mat4 u_NormalMatrix;\nuniform vec3 u_LightColor;\nuniform vec3 u_LightPosition;\nuniform vec3 u_AmbientLight;\nvarying vec4 v_Color;\nvoid main() {\n  vec4 color = vec4(1.0, 1.0, 1.0, 1.0);\n  gl_Position = u_MvpMatrix * a_Position;\n  vec3 normal = normalize(vec3(u_NormalMatrix * a_Normal));\n  vec4 vertexPosition = u_ModelMatrix * a_Position;\n  vec3 lightDirection = normalize(u_LightPosition - vec3(vertexPosition));\n  float nDotL = max(dot(lightDirection, normal), 0.0);\n  vec3 diffuse = u_LightColor * color.rgb * nDotL;\n  vec3 ambient = u_AmbientLight * color.rgb;\n  v_Color = vec4(diffuse + ambient, color.a);\n}\n";var FSHADER_SOURCE="#ifdef GL_ES\nprecision mediump float;\n#endif\nvarying vec4 v_Color;\nvoid main() {\n  gl_FragColor = v_Color;\n}\n";function main(){var c=document.getElementById("webgl");var g=getWebGLContext(c);if(!g){console.log("Failed to get the rendering context for WebGL");return}if(!initShaders(g,VSHADER_SOURCE,FSHADER_SOURCE)){console.log("Failed to intialize shaders.");return}var d=initVertexBuffers(g);if(d<0){console.log("Failed to set the vertex information");return}g.clearColor(0,0,0,1);g.enable(g.DEPTH_TEST);var k=g.getUniformLocation(g.program,"u_ModelMatrix");var b=g.getUniformLocation(g.program,"u_MvpMatrix");var h=g.getUniformLocation(g.program,"u_NormalMatrix");var a=g.getUniformLocation(g.program,"u_LightColor");var l=g.getUniformLocation(g.program,"u_LightPosition");var f=g.getUniformLocation(g.program,"u_AmbientLight");if(!b||!h||!a||!l||!f){console.log("Failed to get the storage location");return}g.uniform3f(a,0.8,0.8,0.8);g.uniform3f(l,5,8,7);g.uniform3f(f,0.2,0.2,0.2);var j=new Matrix4();var i=new Matrix4();var e=new Matrix4();g.uniformMatrix4fv(k,false,j.elements);i.setPerspective(30,c.width/c.height,1,100);i.lookAt(0,0,6,0,0,0,0,1,0);i.multiply(j);g.uniformMatrix4fv(b,false,i.elements);e.setInverseOf(j);e.transpose();g.uniformMatrix4fv(h,false,e.elements);g.clear(g.COLOR_BUFFER_BIT|g.DEPTH_BUFFER_BIT);g.drawElements(g.TRIANGLES,d,g.UNSIGNED_SHORT,0)}function initVertexBuffers(h){var a=13;var e,l,f,q;var c,k,b,p;var o,m;var d=[];var n=[];for(c=0;c<=a;c++){k=c*Math.PI/a;b=Math.sin(k);p=Math.cos(k);for(e=0;e<=a;e++){l=e*2*Math.PI/a;f=Math.sin(l);q=Math.cos(l);d.push(f*b);d.push(p);d.push(q*b)}}for(c=0;c<a;c++){for(e=0;e<a;e++){o=c*(a+1)+e;m=o+(a+1);n.push(o);n.push(m);n.push(o+1);n.push(o+1);n.push(m);n.push(m+1)}}if(!initArrayBuffer(h,"a_Position",new Float32Array(d),h.FLOAT,3)){return -1}if(!initArrayBuffer(h,"a_Normal",new Float32Array(d),h.FLOAT,3)){return -1}h.bindBuffer(h.ARRAY_BUFFER,null);var g=h.createBuffer();if(!g){console.log("Failed to create the buffer object");return -1}h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,g);h.bufferData(h.ELEMENT_ARRAY_BUFFER,new Uint16Array(n),h.STATIC_DRAW);return n.length}function initArrayBuffer(f,d,e,c,b){var a=f.createBuffer();if(!a){console.log("Failed to create the buffer object");return false}f.bindBuffer(f.ARRAY_BUFFER,a);f.bufferData(f.ARRAY_BUFFER,e,f.STATIC_DRAW);var g=f.getAttribLocation(f.program,d);if(g<0){console.log("Failed to get the storage location of "+d);return false}f.vertexAttribPointer(g,b,c,false,0,0);f.enableVertexAttribArray(g);f.bindBuffer(f.ARRAY_BUFFER,null);return true};
var VSHADER_SOURCE="attribute vec4 a_Position;\nuniform mat4 u_ModelMatrix;\nvoid main() {\n  gl_Position = u_ModelMatrix * a_Position;\n}\n";var FSHADER_SOURCE="void main() {\n  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n";function main(){var b=document.getElementById("webgl");var f=getWebGLContext(b);if(!f){console.log("Failed to get the rendering context for WebGL");return}if(!initShaders(f,VSHADER_SOURCE,FSHADER_SOURCE)){console.log("Failed to intialize shaders.");return}var g=initVertexBuffers(f);if(g<0){console.log("Failed to set the positions of the vertices");return}var c=new Matrix4();var e=60;var a=0.5;c.setTranslate(a,0,0);c.rotate(e,0,0,1);var d=f.getUniformLocation(f.program,"u_ModelMatrix");if(!d){console.log("Failed to get the storage location of u_xformMatrix");return}f.uniformMatrix4fv(d,false,c.elements);f.clearColor(0,0,0,1);f.clear(f.COLOR_BUFFER_BIT);f.drawArrays(f.TRIANGLES,0,g)}function initVertexBuffers(d){var a=new Float32Array([0,0.3,-0.3,-0.3,0.3,-0.3]);var e=3;var c=d.createBuffer();if(!c){console.log("Failed to create the buffer object");return false}d.bindBuffer(d.ARRAY_BUFFER,c);d.bufferData(d.ARRAY_BUFFER,a,d.STATIC_DRAW);var b=d.getAttribLocation(d.program,"a_Position");if(b<0){console.log("Failed to get the storage location of a_Position");return -1}d.vertexAttribPointer(b,2,d.FLOAT,false,0,0);d.enableVertexAttribArray(b);return e};
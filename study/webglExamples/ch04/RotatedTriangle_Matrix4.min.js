var VSHADER_SOURCE="attribute vec4 a_Position;\nuniform mat4 u_xformMatrix;\nvoid main() {\n  gl_Position = u_xformMatrix * a_Position;\n}\n";var FSHADER_SOURCE="void main() {\n  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n";function main(){var c=document.getElementById("webgl");var e=getWebGLContext(c);if(!e){console.log("Failed to get the rendering context for WebGL");return}if(!initShaders(e,VSHADER_SOURCE,FSHADER_SOURCE)){console.log("Failed to intialize shaders.");return}var f=initVertexBuffers(e);if(f<0){console.log("Failed to set the positions of the vertices");return}var a=new Matrix4();var d=90;a.setRotate(d,0,0,1);var b=e.getUniformLocation(e.program,"u_xformMatrix");if(!b){console.log("Failed to get the storage location of u_xformMatrix");return}e.uniformMatrix4fv(b,false,a.elements);e.clearColor(0,0,0,1);e.clear(e.COLOR_BUFFER_BIT);e.drawArrays(e.TRIANGLES,0,f)}function initVertexBuffers(d){var a=new Float32Array([0,0.5,-0.5,-0.5,0.5,-0.5]);var e=3;var c=d.createBuffer();if(!c){console.log("Failed to create the buffer object");return false}d.bindBuffer(d.ARRAY_BUFFER,c);d.bufferData(d.ARRAY_BUFFER,a,d.STATIC_DRAW);var b=d.getAttribLocation(d.program,"a_Position");if(b<0){console.log("Failed to get the storage location of a_Position");return -1}d.vertexAttribPointer(b,2,d.FLOAT,false,0,0);d.enableVertexAttribArray(b);return e};
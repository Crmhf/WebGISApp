var VSHADER_SOURCE="attribute vec4 a_Position;\nuniform mat4 u_ModelMatrix;\nvoid main() {\n  gl_Position = u_ModelMatrix * a_Position;\n}\n";var FSHADER_SOURCE="void main() {\n  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n";var ANGLE_STEP=45;function main(){var a=document.getElementById("webgl");var f=getWebGLContext(a);if(!f){console.log("Failed to get the rendering context for WebGL");return}if(!initShaders(f,VSHADER_SOURCE,FSHADER_SOURCE)){console.log("Failed to intialize shaders.");return}var g=initVertexBuffers(f);if(g<0){console.log("Failed to set the positions of the vertices");return}f.clearColor(0,0,0,1);var e=f.getUniformLocation(f.program,"u_ModelMatrix");if(!e){console.log("Failed to get the storage location of u_ModelMatrix");return}var d=0;var c=new Matrix4();var b=function(){d=animate(d);draw(f,g,d,c,e);requestAnimationFrame(b,a)};b()}function initVertexBuffers(d){var a=new Float32Array([0,0.5,-0.5,-0.5,0.5,-0.5]);var e=3;var c=d.createBuffer();if(!c){console.log("Failed to create the buffer object");return -1}d.bindBuffer(d.ARRAY_BUFFER,c);d.bufferData(d.ARRAY_BUFFER,a,d.STATIC_DRAW);var b=d.getAttribLocation(d.program,"a_Position");if(b<0){console.log("Failed to get the storage location of a_Position");return -1}d.vertexAttribPointer(b,2,d.FLOAT,false,0,0);d.enableVertexAttribArray(b);return e}function draw(d,e,b,a,c){a.setRotate(b,0,0,1);d.uniformMatrix4fv(c,false,a.elements);d.clear(d.COLOR_BUFFER_BIT);d.drawArrays(d.TRIANGLES,0,e)}var g_last=Date.now();function animate(c){var b=Date.now();var a=b-g_last;g_last=b;var d=c+(ANGLE_STEP*a)/1000;return d%=360};
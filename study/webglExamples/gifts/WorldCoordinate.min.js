var VSHADER_SOURCE="attribute vec4 a_Position;\nattribute vec4 a_Color;\nuniform mat4 u_mvpMatrix;\nvarying vec4 v_Color;\nvoid main() {\n  gl_Position = u_mvpMatrix * a_Position;\n  v_Color = a_Color;\n}\n";var FSHADER_SOURCE="#ifdef GL_ES\nprecision mediump float;\n#endif\nvarying vec4 v_Color;\nvoid main() {\n  gl_FragColor = v_Color;\n}\n";function main(){var a=document.getElementById("webgl");var e=getWebGLContext(a);if(!e){console.log("Failed to get the rendering context for WebGL");return}if(!initShaders(e,VSHADER_SOURCE,FSHADER_SOURCE)){console.log("Failed to intialize shaders.");return}var b=initVertexBuffers(e);if(b<0){console.log("Failed to set the vertex information");return}e.clearColor(0,0,0,1);e.enable(e.DEPTH_TEST);var l=e.getUniformLocation(e.program,"u_mvpMatrix");if(!l){console.log("Failed to get the storage location of uniform variable");return}var k=new Matrix4();var c=new Matrix4();var j=new Matrix4();var g=new Matrix4();c.setLookAt(0,0,5,0,0,-100,0,1,0);j.setPerspective(30,a.width/a.height,1,100);e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT);for(var d=0;d<10;d++){var h=Math.random()*Math.pow(-1,d);var f=Math.random()*d*5;k.setTranslate(h,0,-f);g.set(j).multiply(c).multiply(k);e.uniformMatrix4fv(l,false,g.elements);e.drawArrays(e.TRIANGLES,0,b)}}function initVertexBuffers(f){var b=new Float32Array([0,1,0,0,0,1,-0.5,-1,0,0,0,1,0.5,-1,0,0,1,0]);var g=3;var e=f.createBuffer();if(!e){console.log("Failed to create the buffer object");return -1}f.bindBuffer(f.ARRAY_BUFFER,e);f.bufferData(f.ARRAY_BUFFER,b,f.STATIC_DRAW);var a=b.BYTES_PER_ELEMENT;var d=f.getAttribLocation(f.program,"a_Position");if(d<0){console.log("Failed to get the storage location of a_Position");return -1}f.vertexAttribPointer(d,3,f.FLOAT,false,a*6,0);f.enableVertexAttribArray(d);var c=f.getAttribLocation(f.program,"a_Color");if(c<0){console.log("Failed to get the storage location of a_Color");return -1}f.vertexAttribPointer(c,3,f.FLOAT,false,a*6,a*3);f.enableVertexAttribArray(c);return g};
var VSHADER_SOURCE="attribute vec4 a_Position;\nattribute float a_PointSize;\nvoid main() {\n  gl_Position = a_Position;\n  gl_PointSize = a_PointSize;\n}\n";var FSHADER_SOURCE="void main() {\n  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n";function main(){var a=document.getElementById("webgl");var b=getWebGLContext(a);if(!b){console.log("Failed to get the rendering context for WebGL");return}if(!initShaders(b,VSHADER_SOURCE,FSHADER_SOURCE)){console.log("Failed to intialize shaders.");return}var c=initVertexBuffers(b);if(c<0){console.log("Failed to set the positions of the vertices");return}b.clearColor(0,0,0,1);b.clear(b.COLOR_BUFFER_BIT);b.drawArrays(b.POINTS,0,c)}function initVertexBuffers(g){var b=new Float32Array([0,0.5,-0.5,-0.5,0.5,-0.5]);var h=3;var e=new Float32Array([10,20,30]);var d=g.createBuffer();var f=g.createBuffer();if(!d||!f){console.log("Failed to create the buffer object");return -1}g.bindBuffer(g.ARRAY_BUFFER,d);g.bufferData(g.ARRAY_BUFFER,b,g.STATIC_DRAW);var c=g.getAttribLocation(g.program,"a_Position");if(c<0){console.log("Failed to get the storage location of a_Position");return -1}g.vertexAttribPointer(c,2,g.FLOAT,false,0,0);g.enableVertexAttribArray(c);g.bindBuffer(g.ARRAY_BUFFER,f);g.bufferData(g.ARRAY_BUFFER,e,g.STATIC_DRAW);var a=g.getAttribLocation(g.program,"a_PointSize");if(a<0){console.log("Failed to get the storage location of a_PointSize");return -1}g.vertexAttribPointer(a,1,g.FLOAT,false,0,0);g.enableVertexAttribArray(a);g.bindBuffer(g.ARRAY_BUFFER,null);return h};
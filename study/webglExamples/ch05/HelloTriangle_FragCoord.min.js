var VSHADER_SOURCE="attribute vec4 a_Position;\nvoid main() {\n  gl_Position = a_Position;\n}\n";var FSHADER_SOURCE="precision mediump float;\nuniform float u_Width;\nuniform float u_Height;\nvoid main() {\n  gl_FragColor = vec4(gl_FragCoord.x/u_Width, 0.0, gl_FragCoord.y/u_Height, 1.0);\n}\n";function main(){var a=document.getElementById("webgl");var b=getWebGLContext(a);if(!b){console.log("Failed to get the rendering context for WebGL");return}if(!initShaders(b,VSHADER_SOURCE,FSHADER_SOURCE)){console.log("Failed to intialize shaders.");return}var c=initVertexBuffers(b);if(c<0){console.log("Failed to set the positions of the vertices");return}b.clearColor(0,0,0,1);b.clear(b.COLOR_BUFFER_BIT);b.drawArrays(b.TRIANGLES,0,c)}function initVertexBuffers(f){var b=new Float32Array([0,0.5,-0.5,-0.5,0.5,-0.5]);var g=3;var d=f.createBuffer();if(!d){console.log("Failed to create the buffer object");return -1}f.bindBuffer(f.ARRAY_BUFFER,d);f.bufferData(f.ARRAY_BUFFER,b,f.STATIC_DRAW);var c=f.getAttribLocation(f.program,"a_Position");if(c<0){console.log("Failed to get the storage location of a_Position");return -1}f.vertexAttribPointer(c,2,f.FLOAT,false,0,0);var e=f.getUniformLocation(f.program,"u_Width");if(!e){console.log("Failed to get the storage location of u_Width");return}var a=f.getUniformLocation(f.program,"u_Height");if(!a){console.log("Failed to get the storage location of u_Height");return}f.uniform1f(e,f.drawingBufferWidth);f.uniform1f(a,f.drawingBufferHeight);f.enableVertexAttribArray(c);f.bindBuffer(f.ARRAY_BUFFER,null);return g};
var VSHADER_SOURCE="attribute vec4 a_Position;\nattribute vec2 a_TexCoord;\nvarying vec2 v_TexCoord;\nvoid main() {\n  gl_Position = a_Position;\n  v_TexCoord = a_TexCoord;\n}\n";var FSHADER_SOURCE="#ifdef GL_ES\nprecision mediump float;\n#endif\nuniform sampler2D u_Sampler;\nvarying vec2 v_TexCoord;\nvoid main() {\n  gl_FragColor = texture2D(u_Sampler, v_TexCoord);\n}\n";function main(){var a=document.getElementById("webgl");var b=getWebGLContext(a);if(!b){console.log("Failed to get the rendering context for WebGL");return}if(!initShaders(b,VSHADER_SOURCE,FSHADER_SOURCE)){console.log("Failed to intialize shaders.");return}var c=initVertexBuffers(b);if(c<0){console.log("Failed to set the vertex information");return}b.clearColor(0,0,0,1);if(!initTextures(b,c)){console.log("Failed to intialize the texture.");return}}function initVertexBuffers(f){var e=new Float32Array([-0.5,0.5,0,1,-0.5,-0.5,0,0,0.5,0.5,1,1,0.5,-0.5,1,0]);var g=4;var c=f.createBuffer();if(!c){console.log("Failed to create the buffer object");return -1}f.bindBuffer(f.ARRAY_BUFFER,c);f.bufferData(f.ARRAY_BUFFER,e,f.STATIC_DRAW);var a=e.BYTES_PER_ELEMENT;var d=f.getAttribLocation(f.program,"a_Position");if(d<0){console.log("Failed to get the storage location of a_Position");return -1}f.vertexAttribPointer(d,2,f.FLOAT,false,a*4,0);f.enableVertexAttribArray(d);var b=f.getAttribLocation(f.program,"a_TexCoord");if(b<0){console.log("Failed to get the storage location of a_TexCoord");return -1}f.vertexAttribPointer(b,2,f.FLOAT,false,a*4,a*2);f.enableVertexAttribArray(b);return g}function initTextures(d,e){var a=d.createTexture();if(!a){console.log("Failed to create the texture object");return false}var c=d.getUniformLocation(d.program,"u_Sampler");if(!c){console.log("Failed to get the storage location of u_Sampler");return false}var b=new Image();if(!b){console.log("Failed to create the image object");return false}b.onload=function(){loadTexture(d,e,a,c,b)};b.src="../resources/sky.jpg";return true}function loadTexture(d,e,a,c,b){d.pixelStorei(d.UNPACK_FLIP_Y_WEBGL,1);d.activeTexture(d.TEXTURE0);d.bindTexture(d.TEXTURE_2D,a);d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.LINEAR);d.texImage2D(d.TEXTURE_2D,0,d.RGB,d.RGB,d.UNSIGNED_BYTE,b);d.uniform1i(c,0);d.clear(d.COLOR_BUFFER_BIT);d.drawArrays(d.TRIANGLE_STRIP,0,e)};
var VSHADER_SOURCE="attribute vec4 a_Position;\nattribute float a_PointSize;\nvoid main() {\n  gl_Position = a_Position;\n  gl_PointSize = a_PointSize;\n}\n";var FSHADER_SOURCE="void main() {\n  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n";function main(){var a=document.getElementById("webgl");var b=getWebGLContext(a);if(!b){console.log("Failed to get the rendering context for WebGL");return}if(!initShaders(b,VSHADER_SOURCE,FSHADER_SOURCE)){console.log("Failed to intialize shaders.");return}var c=initVertexBuffers(b);if(c<0){console.log("Failed to set the vertex information");return}b.clearColor(0,0,0,1);b.clear(b.COLOR_BUFFER_BIT);b.drawArrays(b.POINTS,0,c)}function initVertexBuffers(f){var b=new Float32Array([0,0.5,10,-0.5,-0.5,20,0.5,-0.5,30]);var g=3;var e=f.createBuffer();if(!e){console.log("Failed to create the buffer object");return -1}f.bindBuffer(f.ARRAY_BUFFER,e);f.bufferData(f.ARRAY_BUFFER,b,f.STATIC_DRAW);var a=b.BYTES_PER_ELEMENT;var d=f.getAttribLocation(f.program,"a_Position");if(d<0){console.log("Failed to get the storage location of a_Position");return -1}f.vertexAttribPointer(d,2,f.FLOAT,false,a*3,0);f.enableVertexAttribArray(d);var c=f.getAttribLocation(f.program,"a_PointSize");if(c<0){console.log("Failed to get the storage location of a_PointSize");return -1}f.vertexAttribPointer(c,1,f.FLOAT,false,a*3,a*2);f.enableVertexAttribArray(c);f.bindBuffer(f.ARRAY_BUFFER,null);return g};